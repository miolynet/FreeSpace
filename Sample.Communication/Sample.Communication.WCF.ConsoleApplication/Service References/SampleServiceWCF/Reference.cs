//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/Sample.Communication.WCF.WCFService.DAL")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SampleServiceWCF.INormalService")]
    public interface INormalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INormalService/GetMessageFromService", ReplyAction="http://tempuri.org/INormalService/GetMessageFromServiceResponse")]
        string GetMessageFromService();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INormalService/GetMessageFromService", ReplyAction="http://tempuri.org/INormalService/GetMessageFromServiceResponse")]
        System.IAsyncResult BeginGetMessageFromService(System.AsyncCallback callback, object asyncState);
        
        string EndGetMessageFromService(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INormalServiceChannel : Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.INormalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMessageFromServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMessageFromServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NormalServiceClient : System.ServiceModel.ClientBase<Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.INormalService>, Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.INormalService {
        
        private BeginOperationDelegate onBeginGetMessageFromServiceDelegate;
        
        private EndOperationDelegate onEndGetMessageFromServiceDelegate;
        
        private System.Threading.SendOrPostCallback onGetMessageFromServiceCompletedDelegate;
        
        public NormalServiceClient() {
        }
        
        public NormalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NormalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NormalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NormalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetMessageFromServiceCompletedEventArgs> GetMessageFromServiceCompleted;
        
        public string GetMessageFromService() {
            return base.Channel.GetMessageFromService();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMessageFromService(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMessageFromService(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetMessageFromService(System.IAsyncResult result) {
            return base.Channel.EndGetMessageFromService(result);
        }
        
        private System.IAsyncResult OnBeginGetMessageFromService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetMessageFromService(callback, asyncState);
        }
        
        private object[] OnEndGetMessageFromService(System.IAsyncResult result) {
            string retVal = this.EndGetMessageFromService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMessageFromServiceCompleted(object state) {
            if ((this.GetMessageFromServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMessageFromServiceCompleted(this, new GetMessageFromServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMessageFromServiceAsync() {
            this.GetMessageFromServiceAsync(null);
        }
        
        public void GetMessageFromServiceAsync(object userState) {
            if ((this.onBeginGetMessageFromServiceDelegate == null)) {
                this.onBeginGetMessageFromServiceDelegate = new BeginOperationDelegate(this.OnBeginGetMessageFromService);
            }
            if ((this.onEndGetMessageFromServiceDelegate == null)) {
                this.onEndGetMessageFromServiceDelegate = new EndOperationDelegate(this.OnEndGetMessageFromService);
            }
            if ((this.onGetMessageFromServiceCompletedDelegate == null)) {
                this.onGetMessageFromServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMessageFromServiceCompleted);
            }
            base.InvokeAsync(this.onBeginGetMessageFromServiceDelegate, null, this.onEndGetMessageFromServiceDelegate, this.onGetMessageFromServiceCompletedDelegate, userState);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SampleServiceWCF.IAdvanceService")]
    public interface IAdvanceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdvanceService/GetStudent", ReplyAction="http://tempuri.org/IAdvanceService/GetStudentResponse")]
        Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student GetStudent();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdvanceService/GetStudent", ReplyAction="http://tempuri.org/IAdvanceService/GetStudentResponse")]
        System.IAsyncResult BeginGetStudent(System.AsyncCallback callback, object asyncState);
        
        Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student EndGetStudent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdvanceService/GetStudentByScoreCondition", ReplyAction="http://tempuri.org/IAdvanceService/GetStudentByScoreConditionResponse")]
        Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student[] GetStudentByScoreCondition(int minScore);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAdvanceService/GetStudentByScoreCondition", ReplyAction="http://tempuri.org/IAdvanceService/GetStudentByScoreConditionResponse")]
        System.IAsyncResult BeginGetStudentByScoreCondition(int minScore, System.AsyncCallback callback, object asyncState);
        
        Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student[] EndGetStudentByScoreCondition(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdvanceServiceChannel : Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.IAdvanceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStudentByScoreConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStudentByScoreConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdvanceServiceClient : System.ServiceModel.ClientBase<Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.IAdvanceService>, Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.IAdvanceService {
        
        private BeginOperationDelegate onBeginGetStudentDelegate;
        
        private EndOperationDelegate onEndGetStudentDelegate;
        
        private System.Threading.SendOrPostCallback onGetStudentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStudentByScoreConditionDelegate;
        
        private EndOperationDelegate onEndGetStudentByScoreConditionDelegate;
        
        private System.Threading.SendOrPostCallback onGetStudentByScoreConditionCompletedDelegate;
        
        public AdvanceServiceClient() {
        }
        
        public AdvanceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdvanceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdvanceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdvanceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetStudentCompletedEventArgs> GetStudentCompleted;
        
        public event System.EventHandler<GetStudentByScoreConditionCompletedEventArgs> GetStudentByScoreConditionCompleted;
        
        public Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student GetStudent() {
            return base.Channel.GetStudent();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStudent(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStudent(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student EndGetStudent(System.IAsyncResult result) {
            return base.Channel.EndGetStudent(result);
        }
        
        private System.IAsyncResult OnBeginGetStudent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetStudent(callback, asyncState);
        }
        
        private object[] OnEndGetStudent(System.IAsyncResult result) {
            Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student retVal = this.EndGetStudent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStudentCompleted(object state) {
            if ((this.GetStudentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStudentCompleted(this, new GetStudentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStudentAsync() {
            this.GetStudentAsync(null);
        }
        
        public void GetStudentAsync(object userState) {
            if ((this.onBeginGetStudentDelegate == null)) {
                this.onBeginGetStudentDelegate = new BeginOperationDelegate(this.OnBeginGetStudent);
            }
            if ((this.onEndGetStudentDelegate == null)) {
                this.onEndGetStudentDelegate = new EndOperationDelegate(this.OnEndGetStudent);
            }
            if ((this.onGetStudentCompletedDelegate == null)) {
                this.onGetStudentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStudentCompleted);
            }
            base.InvokeAsync(this.onBeginGetStudentDelegate, null, this.onEndGetStudentDelegate, this.onGetStudentCompletedDelegate, userState);
        }
        
        public Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student[] GetStudentByScoreCondition(int minScore) {
            return base.Channel.GetStudentByScoreCondition(minScore);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStudentByScoreCondition(int minScore, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStudentByScoreCondition(minScore, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student[] EndGetStudentByScoreCondition(System.IAsyncResult result) {
            return base.Channel.EndGetStudentByScoreCondition(result);
        }
        
        private System.IAsyncResult OnBeginGetStudentByScoreCondition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int minScore = ((int)(inValues[0]));
            return this.BeginGetStudentByScoreCondition(minScore, callback, asyncState);
        }
        
        private object[] OnEndGetStudentByScoreCondition(System.IAsyncResult result) {
            Sample.Communication.WCF.ConsoleApplication.SampleServiceWCF.Student[] retVal = this.EndGetStudentByScoreCondition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStudentByScoreConditionCompleted(object state) {
            if ((this.GetStudentByScoreConditionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStudentByScoreConditionCompleted(this, new GetStudentByScoreConditionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStudentByScoreConditionAsync(int minScore) {
            this.GetStudentByScoreConditionAsync(minScore, null);
        }
        
        public void GetStudentByScoreConditionAsync(int minScore, object userState) {
            if ((this.onBeginGetStudentByScoreConditionDelegate == null)) {
                this.onBeginGetStudentByScoreConditionDelegate = new BeginOperationDelegate(this.OnBeginGetStudentByScoreCondition);
            }
            if ((this.onEndGetStudentByScoreConditionDelegate == null)) {
                this.onEndGetStudentByScoreConditionDelegate = new EndOperationDelegate(this.OnEndGetStudentByScoreCondition);
            }
            if ((this.onGetStudentByScoreConditionCompletedDelegate == null)) {
                this.onGetStudentByScoreConditionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStudentByScoreConditionCompleted);
            }
            base.InvokeAsync(this.onBeginGetStudentByScoreConditionDelegate, new object[] {
                        minScore}, this.onEndGetStudentByScoreConditionDelegate, this.onGetStudentByScoreConditionCompletedDelegate, userState);
        }
    }
}
